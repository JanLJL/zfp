#ifndef cuZFP_CONSTANTS_H
#define cuZFP_CONSTANTS_H

namespace cuZFP {

#define index_4d(x, y, z, w) ((x) + 4 * ((y) + 4 * ((z) + 4 * (w))))

__device__ static const unsigned char
perm_4d[256] = {
	index_4d(0, 0, 0, 0), //  0 :  0
	index_4d(0, 0, 0, 1), //  1 :  1
	index_4d(0, 0, 0, 2), //  2 :  2
	index_4d(0, 0, 0, 3), //  3 :  3
	index_4d(0, 0, 1, 0), //  4 :  1
	index_4d(0, 0, 1, 1), //  5 :  2
	index_4d(0, 0, 1, 2), //  6 :  3
	index_4d(0, 0, 1, 3), //  7 :  4
	index_4d(0, 0, 2, 0), //  8 :  2
	index_4d(0, 0, 2, 1), //  9 :  3
	index_4d(0, 0, 2, 2), // 10 :  4
	index_4d(0, 0, 2, 3), // 11 :  5
	index_4d(0, 0, 3, 0), // 12 :  3
	index_4d(0, 0, 3, 1), // 13 :  4
	index_4d(0, 0, 3, 2), // 14 :  5
	index_4d(0, 0, 3, 3), // 15 :  6
	index_4d(0, 1, 0, 0), // 16 :  1
	index_4d(0, 1, 0, 1), // 17 :  2
	index_4d(0, 1, 0, 2), // 18 :  3
	index_4d(0, 1, 0, 3), // 19 :  4
	index_4d(0, 1, 1, 0), // 20 :  2
	index_4d(0, 1, 1, 1), // 21 :  3
	index_4d(0, 1, 1, 2), // 22 :  4
	index_4d(0, 1, 1, 3), // 23 :  5
	index_4d(0, 1, 2, 0), // 24 :  3
	index_4d(0, 1, 2, 1), // 25 :  4
	index_4d(0, 1, 2, 2), // 26 :  5
	index_4d(0, 1, 2, 3), // 27 :  6
	index_4d(0, 1, 3, 0), // 28 :  4
	index_4d(0, 1, 3, 1), // 29 :  5
	index_4d(0, 1, 3, 2), // 30 :  6
	index_4d(0, 1, 3, 3), // 31 :  7
	index_4d(0, 2, 0, 0), // 32 :  2
	index_4d(0, 2, 0, 1), // 33 :  3
	index_4d(0, 2, 0, 2), // 34 :  4
	index_4d(0, 2, 0, 3), // 35 :  5
	index_4d(0, 2, 1, 0), // 36 :  3
	index_4d(0, 2, 1, 1), // 37 :  4
	index_4d(0, 2, 1, 2), // 38 :  5
	index_4d(0, 2, 1, 3), // 39 :  6
	index_4d(0, 2, 2, 0), // 40 :  4
	index_4d(0, 2, 2, 1), // 41 :  5
	index_4d(0, 2, 2, 2), // 42 :  6
	index_4d(0, 2, 2, 3), // 43 :  7
	index_4d(0, 2, 3, 0), // 44 :  5
	index_4d(0, 2, 3, 1), // 45 :  6
	index_4d(0, 2, 3, 2), // 46 :  7
	index_4d(0, 2, 3, 3), // 47 :  8
	index_4d(0, 3, 0, 0), // 48 :  3
	index_4d(0, 3, 0, 1), // 49 :  4
	index_4d(0, 3, 0, 2), // 50 :  5
	index_4d(0, 3, 0, 3), // 51 :  6
	index_4d(0, 3, 1, 0), // 52 :  4
	index_4d(0, 3, 1, 1), // 53 :  5
	index_4d(0, 3, 1, 2), // 54 :  6
	index_4d(0, 3, 1, 3), // 55 :  7
	index_4d(0, 3, 2, 0), // 56 :  5
	index_4d(0, 3, 2, 1), // 57 :  6
	index_4d(0, 3, 2, 2), // 58 :  7
	index_4d(0, 3, 2, 3), // 59 :  8
	index_4d(0, 3, 3, 0), // 60 :  6
	index_4d(0, 3, 3, 1), // 61 :  7
	index_4d(0, 3, 3, 2), // 62 :  8
	index_4d(0, 3, 3, 3), // 63 :  9
	index_4d(1, 0, 0, 0), // 64 :  1
	index_4d(1, 0, 0, 1), // 65 :  2
	index_4d(1, 0, 0, 2), // 66 :  3
	index_4d(1, 0, 0, 3), // 67 :  4
	index_4d(1, 0, 1, 0), // 68 :  2
	index_4d(1, 0, 1, 1), // 69 :  3
	index_4d(1, 0, 1, 2), // 70 :  4
	index_4d(1, 0, 1, 3), // 71 :  5
	index_4d(1, 0, 2, 0), // 72 :  3
	index_4d(1, 0, 2, 1), // 73 :  4
	index_4d(1, 0, 2, 2), // 74 :  5
	index_4d(1, 0, 2, 3), // 75 :  6
	index_4d(1, 0, 3, 0), // 76 :  4
	index_4d(1, 0, 3, 1), // 77 :  5
	index_4d(1, 0, 3, 2), // 78 :  6
	index_4d(1, 0, 3, 3), // 79 :  7
	index_4d(1, 1, 0, 0), // 80 :  2
	index_4d(1, 1, 0, 1), // 81 :  3
	index_4d(1, 1, 0, 2), // 82 :  4
	index_4d(1, 1, 0, 3), // 83 :  5
	index_4d(1, 1, 1, 0), // 84 :  3
	index_4d(1, 1, 1, 1), // 85 :  4
	index_4d(1, 1, 1, 2), // 86 :  5
	index_4d(1, 1, 1, 3), // 87 :  6
	index_4d(1, 1, 2, 0), // 88 :  4
	index_4d(1, 1, 2, 1), // 89 :  5
	index_4d(1, 1, 2, 2), // 90 :  6
	index_4d(1, 1, 2, 3), // 91 :  7
	index_4d(1, 1, 3, 0), // 92 :  5
	index_4d(1, 1, 3, 1), // 93 :  6
	index_4d(1, 1, 3, 2), // 94 :  7
	index_4d(1, 1, 3, 3), // 95 :  8
	index_4d(1, 2, 0, 0), // 96 :  3
	index_4d(1, 2, 0, 1), // 97 :  4
	index_4d(1, 2, 0, 2), // 98 :  5
	index_4d(1, 2, 0, 3), // 99 :  6
	index_4d(1, 2, 1, 0), // 100 :  4
	index_4d(1, 2, 1, 1), // 101 :  5
	index_4d(1, 2, 1, 2), // 102 :  6
	index_4d(1, 2, 1, 3), // 103 :  7
	index_4d(1, 2, 2, 0), // 104 :  5
	index_4d(1, 2, 2, 1), // 105 :  6
	index_4d(1, 2, 2, 2), // 106 :  7
	index_4d(1, 2, 2, 3), // 107 :  8
	index_4d(1, 2, 3, 0), // 108 :  6
	index_4d(1, 2, 3, 1), // 109 :  7
	index_4d(1, 2, 3, 2), // 110 :  8
	index_4d(1, 2, 3, 3), // 111 :  9
	index_4d(1, 3, 0, 0), // 112 :  4
	index_4d(1, 3, 0, 1), // 113 :  5
	index_4d(1, 3, 0, 2), // 114 :  6
	index_4d(1, 3, 0, 3), // 115 :  7
	index_4d(1, 3, 1, 0), // 116 :  5
	index_4d(1, 3, 1, 1), // 117 :  6
	index_4d(1, 3, 1, 2), // 118 :  7
	index_4d(1, 3, 1, 3), // 119 :  8
	index_4d(1, 3, 2, 0), // 120 :  6
	index_4d(1, 3, 2, 1), // 121 :  7
	index_4d(1, 3, 2, 2), // 122 :  8
	index_4d(1, 3, 2, 3), // 123 :  9
	index_4d(1, 3, 3, 0), // 124 :  7
	index_4d(1, 3, 3, 1), // 125 :  8
	index_4d(1, 3, 3, 2), // 126 :  9
	index_4d(1, 3, 3, 3), // 127 : 10
	index_4d(2, 0, 0, 0), // 128 :  2
	index_4d(2, 0, 0, 1), // 129 :  3
	index_4d(2, 0, 0, 2), // 130 :  4
	index_4d(2, 0, 0, 3), // 131 :  5
	index_4d(2, 0, 1, 0), // 132 :  3
	index_4d(2, 0, 1, 1), // 133 :  4
	index_4d(2, 0, 1, 2), // 134 :  5
	index_4d(2, 0, 1, 3), // 135 :  6
	index_4d(2, 0, 2, 0), // 136 :  4
	index_4d(2, 0, 2, 1), // 137 :  5
	index_4d(2, 0, 2, 2), // 138 :  6
	index_4d(2, 0, 2, 3), // 139 :  7
	index_4d(2, 0, 3, 0), // 140 :  5
	index_4d(2, 0, 3, 1), // 141 :  6
	index_4d(2, 0, 3, 2), // 142 :  7
	index_4d(2, 0, 3, 3), // 143 :  8
	index_4d(2, 1, 0, 0), // 144 :  3
	index_4d(2, 1, 0, 1), // 145 :  4
	index_4d(2, 1, 0, 2), // 146 :  5
	index_4d(2, 1, 0, 3), // 147 :  6
	index_4d(2, 1, 1, 0), // 148 :  4
	index_4d(2, 1, 1, 1), // 149 :  5
	index_4d(2, 1, 1, 2), // 150 :  6
	index_4d(2, 1, 1, 3), // 151 :  7
	index_4d(2, 1, 2, 0), // 152 :  5
	index_4d(2, 1, 2, 1), // 153 :  6
	index_4d(2, 1, 2, 2), // 154 :  7
	index_4d(2, 1, 2, 3), // 155 :  8
	index_4d(2, 1, 3, 0), // 156 :  6
	index_4d(2, 1, 3, 1), // 157 :  7
	index_4d(2, 1, 3, 2), // 158 :  8
	index_4d(2, 1, 3, 3), // 159 :  9
	index_4d(2, 2, 0, 0), // 160 :  4
	index_4d(2, 2, 0, 1), // 161 :  5
	index_4d(2, 2, 0, 2), // 162 :  6
	index_4d(2, 2, 0, 3), // 163 :  7
	index_4d(2, 2, 1, 0), // 164 :  5
	index_4d(2, 2, 1, 1), // 165 :  6
	index_4d(2, 2, 1, 2), // 166 :  7
	index_4d(2, 2, 1, 3), // 167 :  8
	index_4d(2, 2, 2, 0), // 168 :  6
	index_4d(2, 2, 2, 1), // 169 :  7
	index_4d(2, 2, 2, 2), // 170 :  8
	index_4d(2, 2, 2, 3), // 171 :  9
	index_4d(2, 2, 3, 0), // 172 :  7
	index_4d(2, 2, 3, 1), // 173 :  8
	index_4d(2, 2, 3, 2), // 174 :  9
	index_4d(2, 2, 3, 3), // 175 : 10
	index_4d(2, 3, 0, 0), // 176 :  5
	index_4d(2, 3, 0, 1), // 177 :  6
	index_4d(2, 3, 0, 2), // 178 :  7
	index_4d(2, 3, 0, 3), // 179 :  8
	index_4d(2, 3, 1, 0), // 180 :  6
	index_4d(2, 3, 1, 1), // 181 :  7
	index_4d(2, 3, 1, 2), // 182 :  8
	index_4d(2, 3, 1, 3), // 183 :  9
	index_4d(2, 3, 2, 0), // 184 :  7
	index_4d(2, 3, 2, 1), // 185 :  8
	index_4d(2, 3, 2, 2), // 186 :  9
	index_4d(2, 3, 2, 3), // 187 : 10
	index_4d(2, 3, 3, 0), // 188 :  8
	index_4d(2, 3, 3, 1), // 189 :  9
	index_4d(2, 3, 3, 2), // 190 : 10
	index_4d(2, 3, 3, 3), // 191 : 11
	index_4d(3, 0, 0, 0), // 192 :  3
	index_4d(3, 0, 0, 1), // 193 :  4
	index_4d(3, 0, 0, 2), // 194 :  5
	index_4d(3, 0, 0, 3), // 195 :  6
	index_4d(3, 0, 1, 0), // 196 :  4
	index_4d(3, 0, 1, 1), // 197 :  5
	index_4d(3, 0, 1, 2), // 198 :  6
	index_4d(3, 0, 1, 3), // 199 :  7
	index_4d(3, 0, 2, 0), // 200 :  5
	index_4d(3, 0, 2, 1), // 201 :  6
	index_4d(3, 0, 2, 2), // 202 :  7
	index_4d(3, 0, 2, 3), // 203 :  8
	index_4d(3, 0, 3, 0), // 204 :  6
	index_4d(3, 0, 3, 1), // 205 :  7
	index_4d(3, 0, 3, 2), // 206 :  8
	index_4d(3, 0, 3, 3), // 207 :  9
	index_4d(3, 1, 0, 0), // 208 :  4
	index_4d(3, 1, 0, 1), // 209 :  5
	index_4d(3, 1, 0, 2), // 210 :  6
	index_4d(3, 1, 0, 3), // 211 :  7
	index_4d(3, 1, 1, 0), // 212 :  5
	index_4d(3, 1, 1, 1), // 213 :  6
	index_4d(3, 1, 1, 2), // 214 :  7
	index_4d(3, 1, 1, 3), // 215 :  8
	index_4d(3, 1, 2, 0), // 216 :  6
	index_4d(3, 1, 2, 1), // 217 :  7
	index_4d(3, 1, 2, 2), // 218 :  8
	index_4d(3, 1, 2, 3), // 219 :  9
	index_4d(3, 1, 3, 0), // 220 :  7
	index_4d(3, 1, 3, 1), // 221 :  8
	index_4d(3, 1, 3, 2), // 222 :  9
	index_4d(3, 1, 3, 3), // 223 : 10
	index_4d(3, 2, 0, 0), // 224 :  5
	index_4d(3, 2, 0, 1), // 225 :  6
	index_4d(3, 2, 0, 2), // 226 :  7
	index_4d(3, 2, 0, 3), // 227 :  8
	index_4d(3, 2, 1, 0), // 228 :  6
	index_4d(3, 2, 1, 1), // 229 :  7
	index_4d(3, 2, 1, 2), // 230 :  8
	index_4d(3, 2, 1, 3), // 231 :  9
	index_4d(3, 2, 2, 0), // 232 :  7
	index_4d(3, 2, 2, 1), // 233 :  8
	index_4d(3, 2, 2, 2), // 234 :  9
	index_4d(3, 2, 2, 3), // 235 : 10
	index_4d(3, 2, 3, 0), // 236 :  8
	index_4d(3, 2, 3, 1), // 237 :  9
	index_4d(3, 2, 3, 2), // 238 : 10
	index_4d(3, 2, 3, 3), // 239 : 11
	index_4d(3, 3, 0, 0), // 240 :  6
	index_4d(3, 3, 0, 1), // 241 :  7
	index_4d(3, 3, 0, 2), // 242 :  8
	index_4d(3, 3, 0, 3), // 243 :  9
	index_4d(3, 3, 1, 0), // 244 :  7
	index_4d(3, 3, 1, 1), // 245 :  8
	index_4d(3, 3, 1, 2), // 246 :  9
	index_4d(3, 3, 1, 3), // 247 : 10
	index_4d(3, 3, 2, 0), // 248 :  8
	index_4d(3, 3, 2, 1), // 249 :  9
	index_4d(3, 3, 2, 2), // 250 : 10
	index_4d(3, 3, 2, 3), // 251 : 11
	index_4d(3, 3, 3, 0), // 252 :  9
	index_4d(3, 3, 3, 1), // 253 : 10
	index_4d(3, 3, 3, 2), // 254 : 11
	index_4d(3, 3, 3, 3), // 255 : 12
};

#undef index_4d


#define index_3d(x, y, z) ((x) + 4 * ((y) + 4 * (z)))

__device__ static const unsigned char
perm_3d[64] = {
	index_3d(0, 0, 0), //  0 : 0

	index_3d(1, 0, 0), //  1 : 1
	index_3d(0, 1, 0), //  2 : 1
	index_3d(0, 0, 1), //  3 : 1

	index_3d(0, 1, 1), //  4 : 2
	index_3d(1, 0, 1), //  5 : 2
	index_3d(1, 1, 0), //  6 : 2

	index_3d(2, 0, 0), //  7 : 2
	index_3d(0, 2, 0), //  8 : 2
	index_3d(0, 0, 2), //  9 : 2

	index_3d(1, 1, 1), // 10 : 3

	index_3d(2, 1, 0), // 11 : 3
	index_3d(2, 0, 1), // 12 : 3
	index_3d(0, 2, 1), // 13 : 3
	index_3d(1, 2, 0), // 14 : 3
	index_3d(1, 0, 2), // 15 : 3
	index_3d(0, 1, 2), // 16 : 3

	index_3d(3, 0, 0), // 17 : 3
	index_3d(0, 3, 0), // 18 : 3
	index_3d(0, 0, 3), // 19 : 3

	index_3d(2, 1, 1), // 20 : 4
	index_3d(1, 2, 1), // 21 : 4
	index_3d(1, 1, 2), // 22 : 4

	index_3d(0, 2, 2), // 23 : 4
	index_3d(2, 0, 2), // 24 : 4
	index_3d(2, 2, 0), // 25 : 4

	index_3d(3, 1, 0), // 26 : 4
	index_3d(3, 0, 1), // 27 : 4
	index_3d(0, 3, 1), // 28 : 4
	index_3d(1, 3, 0), // 29 : 4
	index_3d(1, 0, 3), // 30 : 4
	index_3d(0, 1, 3), // 31 : 4

	index_3d(1, 2, 2), // 32 : 5
	index_3d(2, 1, 2), // 33 : 5
	index_3d(2, 2, 1), // 34 : 5

	index_3d(3, 1, 1), // 35 : 5
	index_3d(1, 3, 1), // 36 : 5
	index_3d(1, 1, 3), // 37 : 5

	index_3d(3, 2, 0), // 38 : 5
	index_3d(3, 0, 2), // 39 : 5
	index_3d(0, 3, 2), // 40 : 5
	index_3d(2, 3, 0), // 41 : 5
	index_3d(2, 0, 3), // 42 : 5
	index_3d(0, 2, 3), // 43 : 5

	index_3d(2, 2, 2), // 44 : 6

	index_3d(3, 2, 1), // 45 : 6
	index_3d(3, 1, 2), // 46 : 6
	index_3d(1, 3, 2), // 47 : 6
	index_3d(2, 3, 1), // 48 : 6
	index_3d(2, 1, 3), // 49 : 6
	index_3d(1, 2, 3), // 50 : 6

	index_3d(0, 3, 3), // 51 : 6
	index_3d(3, 0, 3), // 52 : 6
	index_3d(3, 3, 0), // 53 : 6

	index_3d(3, 2, 2), // 54 : 7
	index_3d(2, 3, 2), // 55 : 7
	index_3d(2, 2, 3), // 56 : 7

	index_3d(1, 3, 3), // 57 : 7
	index_3d(3, 1, 3), // 58 : 7
	index_3d(3, 3, 1), // 59 : 7

	index_3d(2, 3, 3), // 60 : 8
	index_3d(3, 2, 3), // 61 : 8
	index_3d(3, 3, 2), // 62 : 8

	index_3d(3, 3, 3), // 63 : 9
};

#undef index_3d

__device__ static const unsigned char perm_1[4] =
{
  0, 1, 2, 3
};

#define index(i, j) ((i) + 4 * (j))

/* order coefficients (i, j) by i + j, then i^2 + j^2 */
__device__ static const unsigned char perm_2[16] = {
  index(0, 0), /*  0 : 0 */

  index(1, 0), /*  1 : 1 */
  index(0, 1), /*  2 : 1 */

  index(1, 1), /*  3 : 2 */

  index(2, 0), /*  4 : 2 */
  index(0, 2), /*  5 : 2 */

  index(2, 1), /*  6 : 3 */
  index(1, 2), /*  7 : 3 */

  index(3, 0), /*  8 : 3 */
  index(0, 3), /*  9 : 3 */

  index(2, 2), /* 10 : 4 */

  index(3, 1), /* 11 : 4 */
  index(1, 3), /* 12 : 4 */

  index(3, 2), /* 13 : 5 */
  index(2, 3), /* 14 : 5 */

  index(3, 3), /* 15 : 6 */
};

#undef index

} // namespace cuZFP
#endif
